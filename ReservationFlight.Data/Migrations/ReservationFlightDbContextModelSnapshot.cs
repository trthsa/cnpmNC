// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationFlight.Data.EF;

#nullable disable

namespace ReservationFlight.Data.Migrations
{
    [DbContext(typeof(ReservationFlightDbContext))]
    partial class ReservationFlightDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Airport", b =>
                {
                    b.Property<string>("IATA")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("IATA");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IATA"));

                    b.ToTable("Airports", (string)null);

                    b.HasData(
                        new
                        {
                            IATA = "SGN",
                            Name = "Tp. Hồ Chí Minh (SGN)",
                            Status = 1
                        },
                        new
                        {
                            IATA = "HAN",
                            Name = "Hà Nội (HAN)",
                            Status = 1
                        },
                        new
                        {
                            IATA = "HUI",
                            Name = "Huế (HUI)",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfigs", (string)null);

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is home page of Reservation Flight"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is keyword of Reservation Flight"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description of Reservation Flight"
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "831436e4-ec04-41fd-8ac8-a18ce62e30b9",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            Address = "123 Lien Ap 2-6 X.Vinh Loc A H. Binh Chanh",
                            ConcurrencyStamp = "d23fd84f-fc6d-4944-94d3-b6ee5319b4a3",
                            Email = "lequocanh.qa@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Quoc Anh",
                            NormalizedEmail = "lequocanh.qa@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEAeYNTs2LlhUC+RsbQRsQWON/iJCgMtJQxHh7s/AS3pq1CB/PF0fvhcE1NR8CWyVQQ==",
                            PhoneNumber = "0774642207",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Aviation", b =>
                {
                    b.Property<string>("AviationCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ImageAviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("AviationCode");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AviationCode"));

                    b.ToTable("Aviations", (string)null);

                    b.HasData(
                        new
                        {
                            AviationCode = "HVN",
                            ImageAviation = "vietnamairlines.png",
                            Name = "Vietnam Airlines",
                            Status = 1
                        },
                        new
                        {
                            AviationCode = "VJC",
                            ImageAviation = "vietjetair.jpg",
                            Name = "Vietjet Air",
                            Status = 1
                        },
                        new
                        {
                            AviationCode = "BAV",
                            ImageAviation = "bambooairways.png",
                            Name = "Bamboo Airways",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Customer", b =>
                {
                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityNumber");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IdentityNumber"));

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.FlightRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArrivalId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DepartureId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId");

                    b.ToTable("FlightRoutes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalId = "HAN",
                            DepartureId = "SGN",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrivalId = "HUI",
                            DepartureId = "SGN",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            ArrivalId = "HAN",
                            DepartureId = "HUI",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.FlightSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AviationId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("FlightRouteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("ScheduledTimeArrival")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ScheduledTimeDeparture")
                        .HasColumnType("time");

                    b.Property<int>("SeatBusiness")
                        .HasColumnType("int");

                    b.Property<int>("SeatEconomy")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("AviationId");

                    b.HasIndex("FlightRouteId");

                    b.ToTable("FlightSchedules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AviationId = "HVN",
                            Date = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "HVN0123",
                            FlightRouteId = 1,
                            Price = 1300000m,
                            ScheduledTimeArrival = new TimeSpan(0, 10, 30, 0, 0),
                            ScheduledTimeDeparture = new TimeSpan(0, 8, 30, 0, 0),
                            SeatBusiness = 8,
                            SeatEconomy = 160,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AviationId = "VJC",
                            Date = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "VJC0124",
                            FlightRouteId = 1,
                            Price = 1400000m,
                            ScheduledTimeArrival = new TimeSpan(0, 10, 45, 0, 0),
                            ScheduledTimeDeparture = new TimeSpan(0, 8, 45, 0, 0),
                            SeatBusiness = 8,
                            SeatEconomy = 160,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AviationId = "BAV",
                            Date = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "BAV0125",
                            FlightRouteId = 1,
                            Price = 1500000m,
                            ScheduledTimeArrival = new TimeSpan(0, 11, 0, 0, 0),
                            ScheduledTimeDeparture = new TimeSpan(0, 9, 0, 0, 0),
                            SeatBusiness = 8,
                            SeatEconomy = 160,
                            Status = 0
                        });
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdFlightSchedule")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReservationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TravelClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.FlightRoute", b =>
                {
                    b.HasOne("ReservationFlight.Data.Entities.Airport", "Airport")
                        .WithMany("FlightRoutes")
                        .HasForeignKey("ArrivalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.FlightSchedule", b =>
                {
                    b.HasOne("ReservationFlight.Data.Entities.Aviation", "Aviation")
                        .WithMany("FlightSchedules")
                        .HasForeignKey("AviationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationFlight.Data.Entities.FlightRoute", "FlightRoute")
                        .WithMany("FlightSchedules")
                        .HasForeignKey("FlightRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aviation");

                    b.Navigation("FlightRoute");
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Airport", b =>
                {
                    b.Navigation("FlightRoutes");
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.Aviation", b =>
                {
                    b.Navigation("FlightSchedules");
                });

            modelBuilder.Entity("ReservationFlight.Data.Entities.FlightRoute", b =>
                {
                    b.Navigation("FlightSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
